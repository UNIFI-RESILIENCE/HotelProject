version: "2"
services:

  db:
    image: postgres
    ports:
      - "5434:5432" 
    restart: always
    networks:
      - my-network
    environment:
      POSTGRES_PASSWORD: /Pass@098/
      POSTGRES_USER: dbmanager
      POSTGRES_DB: hoteldb
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgres-data
    healthcheck:
      test: [ "CMD", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 20s
      timeout: 20s
      retries: 10
  app:
    image:  hotelroom
    build:
      context: .
      dockerfile: Dockerfile
      args:
        dbHost: dbmanager
        dbName: jdbc:postgresql://db:5432/hoteldb 
        dbPassword: /Pass@098/
    environment:
      DB_USER: dbmanager
      DB_URL: jdbc:postgresql://db:5432/hoteldb
      DB_PASSWORD: /Pass@098/
      HOST_NAME: localhost
    networks: 
      - my-network  
    depends_on:
      - db
        
    command:  ["sh", "-c", "java -jar /app/app.jar hotel.HotelRoomApp -dbHost dbmanager -dbName jdbc:postgresql://db:5432/hoteldb  -dbPassword /Pass@098/" ]

    # command: ["sh", "-c", "ls -la / && cd app && ls -al"]
  
networks:
  my-network:
    driver: bridge

volumes:
  db-data: